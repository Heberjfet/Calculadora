
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE LOG LPAREN MINUS NUMBER PLUS RPAREN TIMESexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LOG LPAREN expression RPARENexpression : LPAREN expression RPARENexpression : NUMBERexpression : MINUS expression %prec UMINUS'
    
_lr_action_items = {'LOG':([0,2,4,6,7,8,9,11,],[3,3,3,3,3,3,3,3,]),'LPAREN':([0,2,3,4,6,7,8,9,11,],[4,4,11,4,4,4,4,4,4,]),'NUMBER':([0,2,4,6,7,8,9,11,],[5,5,5,5,5,5,5,5,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,],[2,7,2,2,-7,2,2,2,2,-8,2,7,-1,-2,-3,-4,7,-6,-5,]),'$end':([1,5,10,13,14,15,16,18,19,],[0,-7,-8,-1,-2,-3,-4,-6,-5,]),'PLUS':([1,5,10,12,13,14,15,16,17,18,19,],[6,-7,-8,6,-1,-2,-3,-4,6,-6,-5,]),'TIMES':([1,5,10,12,13,14,15,16,17,18,19,],[8,-7,-8,8,8,8,-3,-4,8,-6,-5,]),'DIVIDE':([1,5,10,12,13,14,15,16,17,18,19,],[9,-7,-8,9,9,9,-3,-4,9,-6,-5,]),'RPAREN':([5,10,12,13,14,15,16,17,18,19,],[-7,-8,18,-1,-2,-3,-4,19,-6,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,6,7,8,9,11,],[1,10,12,13,14,15,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','lexer_parser.py',57),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','lexer_parser.py',58),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','lexer_parser.py',59),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','lexer_parser.py',60),
  ('expression -> LOG LPAREN expression RPAREN','expression',4,'p_expression_log','lexer_parser.py',71),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','lexer_parser.py',75),
  ('expression -> NUMBER','expression',1,'p_expression_number','lexer_parser.py',79),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','lexer_parser.py',83),
]
